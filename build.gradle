// Manifest version information!
def versionMajor = 0
def versionMinor = 0
def versionPatch = 1
def versionCodeApp = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100

apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'

buildscript {
  repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.2.2'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    classpath 'io.fabric.tools:gradle:1.21.6'
  }
}

allprojects {
  ext {
    androidApplicationId = 'com.javiertarazaga.instasearch'
    androidVersionCode = versionCodeApp
    androidVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"
    testInstrumentationRunner = 'android.support.test.runner.AndroidJUnitRunner'
    testApplicationId = 'com.javiertarazaga.instasearch.presentation.test'
  }
}

task runDomainUnitTests(dependsOn: [':domain:test']) {
  description 'Run unit tests for the domain layer.'
}

task runDataUnitTests(dependsOn: [':data:cleanTestDebugUnitTest', ':data:testDebugUnitTest']) {
  description 'Run unit tests for the data layer.'
}

task runUnitTests(dependsOn: ['runDomainUnitTests', 'runDataUnitTests']) {
  description 'Run unit tests for both domain and data layers.'
}

task runAcceptanceTests(dependsOn: [':presentation:connectedAndroidTest']) {
  description 'Run application acceptance tests.'
}

